Rendering occurs in a few passes:
	1. [SIMULATION] Compute locations of all objects to be rendered
		Inputs:  None
		Outputs: Positions, angles
		
		NOTE: The locations of some objects may depend on the locations of other objects.
		TODO: Make a solver / ordering thing to handle this?
		      The behaviour of loops of dependencies is undefined.
	2. [RENDERING] Cull objects to view frustum (where it is cheap to do so) and store the result.
	3. [RENDERING] Compute object matrices, culling data, etc and store it.
	4. [RENDERING] Draw things (as many times as the engine wants us to)

TODO: There is correlation between consecutive frames, work out how to exploit it